{"ast":null,"code":"var _jsxFileName = \"/Users/tharunganapathiraman/Documents/GWU/Courses/Component based enterpise software/Project/UI/wecureit-ui-tharun/src/DoctorBookingForm.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DoctorBookingForm = props => {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(\"\");\n  const [selectedTime, setSelectedTime] = useState(\"\");\n  const [duration, setDuration] = useState();\n  useEffect(() => {\n    const fetchDoctors = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/api/doctor\");\n        const data = await response.json();\n        setDoctors(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchDoctors();\n  }, []);\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    // TODO: add logic to submit form based on booking option\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleFormSubmit,\n    children: [doctors && /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"doctor\",\n      children: [\"Select a Doctor:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"doctor\",\n        name: \"doctor\",\n        children: doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: doctor.id,\n          children: [doctor.firstName, \" \", doctor.lastName]\n        }, doctor.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 23\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Book Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(DoctorBookingForm, \"fQnqQOAVlSXPZ2s5P4ZLNTQDZfI=\");\n_c = DoctorBookingForm;\nvar _c;\n$RefreshReg$(_c, \"DoctorBookingForm\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","DoctorBookingForm","props","_s","doctors","setDoctors","selectedDate","setSelectedDate","selectedTime","setSelectedTime","duration","setDuration","fetchDoctors","response","fetch","data","json","error","console","log","handleFormSubmit","event","preventDefault","onSubmit","children","htmlFor","id","name","map","doctor","value","firstName","lastName","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/Users/tharunganapathiraman/Documents/GWU/Courses/Component based enterpise software/Project/UI/wecureit-ui-tharun/src/DoctorBookingForm.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Doctor, Patient } from \"./interfaces\";\n\ninterface Props {\n    patient: Patient | null;\n}\n\nexport const DoctorBookingForm = (props: Props) => {\n    const [doctors, setDoctors] = useState<Doctor[]>([]);\n    const [selectedDate, setSelectedDate] = useState<string>(\"\");\n    const [selectedTime, setSelectedTime] = useState<string>(\"\");\n    const [duration, setDuration] = useState<number>();\n    \n    useEffect(() => {\n        const fetchDoctors = async () => {\n            try {\n                const response = await fetch(\"http://localhost:8080/api/doctor\");\n                const data = await response.json();\n                setDoctors(data);\n            } catch (error) {\n                console.log(error);\n            }\n        };\n        fetchDoctors();\n    }, []);\n\n    const handleFormSubmit = (event: any) => {\n        event.preventDefault();\n        // TODO: add logic to submit form based on booking option\n    };\n\n    return (\n        <form onSubmit={handleFormSubmit}>\n            {doctors && <label htmlFor=\"doctor\">Select a Doctor:\n              <select id=\"doctor\" name=\"doctor\">\n                  {doctors.map((doctor) => (\n                      <option key={doctor.id} value={doctor.id}>\n                          {doctor.firstName} {doctor.lastName}\n                      </option>\n                  ))}\n              </select>\n            </label>}\n            <button type=\"submit\">Book Appointment</button>\n        </form>\n    );\n};\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO5C,OAAO,MAAMC,iBAAiB,GAAIC,KAAY,IAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAW,EAAE,CAAC;EACpD,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EAC5D,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAS,EAAE,CAAC;EAC5D,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAS,CAAC;EAElDD,SAAS,CAAC,MAAM;IACZ,MAAMe,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,CAAC;QAChE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCX,UAAU,CAACU,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB;IACJ,CAAC;IACDL,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,gBAAgB,GAAIC,KAAU,IAAK;IACrCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB;EACJ,CAAC;;EAED,oBACItB,OAAA;IAAMuB,QAAQ,EAAEH,gBAAiB;IAAAI,QAAA,GAC5BpB,OAAO,iBAAIJ,OAAA;MAAOyB,OAAO,EAAC,QAAQ;MAAAD,QAAA,GAAC,kBAClC,eAAAxB,OAAA;QAAQ0B,EAAE,EAAC,QAAQ;QAACC,IAAI,EAAC,QAAQ;QAAAH,QAAA,EAC5BpB,OAAO,CAACwB,GAAG,CAAEC,MAAM,iBAChB7B,OAAA;UAAwB8B,KAAK,EAAED,MAAM,CAACH,EAAG;UAAAF,QAAA,GACpCK,MAAM,CAACE,SAAS,EAAC,GAAC,EAACF,MAAM,CAACG,QAAQ;QAAA,GAD1BH,MAAM,CAACH,EAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEd,CACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACRpC,OAAA;MAAQqC,IAAI,EAAC,QAAQ;MAAAb,QAAA,EAAC;IAAgB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEf,CAAC;AAACjC,EAAA,CAtCWF,iBAAiB;AAAAqC,EAAA,GAAjBrC,iBAAiB;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}